/* eslint-disable */
export default async () => {
    const t = {
        ["./application/dtos/board/board-response.dto"]: await import("./application/dtos/board/board-response.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./application/dtos/user/userCreateReturn.dto"), { "UserCreateReturnDTO": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, email: { required: true, type: () => String }, image: { required: false, type: () => String, nullable: true } } }], [import("./application/dtos/user/userCreate.dto"), { "UserCreateDTO": { name: { required: true, type: () => String }, email: { required: true, type: () => String }, image: { required: false, type: () => String, nullable: true }, password: { required: true, type: () => String, minLength: 8 }, confirmPassword: { required: true, type: () => String, minLength: 8 } } }], [import("./application/dtos/user/user-update.dto"), { "UserUpdateDTO": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, email: { required: true, type: () => String }, image: { required: false, type: () => String, nullable: true } } }], [import("./application/dtos/user/userFindById.dto"), { "UserFindByIdDTO": { id: { required: true, type: () => String } } }], [import("./application/dtos/user/userFindByIdReturn.dto"), { "UserFindByIdReturnDTO": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, email: { required: true, type: () => String }, image: { required: false, type: () => String, nullable: true } } }], [import("./application/dtos/user/userFindRefreshTokenByIdReturn.dto"), { "UserFindRefreshTokenByIdReturnDTO": { id: { required: true, type: () => String }, refreshToken: { required: true, type: () => String } } }], [import("./application/dtos/user/userFindPasswordByIdOrEmail.dto"), { "UserFindPasswordByIdOrEmailDTO": { id: { required: false, type: () => String }, email: { required: false, type: () => String } } }], [import("./application/dtos/user/userFindPasswordByIdOrEmailReturn.dto"), { "UserFindPasswordByIdOrEmailReturnDTO": { id: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./application/dtos/user/user-find-many.dto"), { "UserFindManyDTO": { users: { required: false, type: () => [String] }, startAt: { required: false, type: () => String }, endAt: { required: false, type: () => String }, page: { required: false, type: () => Number, minimum: 1 }, take: { required: false, type: () => Number, minimum: 1, maximum: 100 } } }], [import("./application/dtos/user/user-delete-by-id.dto"), { "UserDeleteByIdDTO": { id: { required: true, type: () => String } } }], [import("./domain/user/user.entity"), { "UserEntity": { id: { required: false, type: () => String }, name: { required: true, type: () => String }, email: { required: true, type: () => String }, image: { required: false, type: () => String, nullable: true }, password: { required: true, type: () => String }, refreshToken: { required: false, type: () => String, nullable: true } } }], [import("./application/dtos/access/accessReturn.dto"), { "AccessReturnDTO": { accessToken: { required: true, type: () => String } } }], [import("./application/dtos/access/access.dto"), { "AccessDTO": { email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./application/dtos/access/accessUpdatePassword.dto"), { "AccessUpdatePasswordDTO": { token: { required: true, type: () => String }, password: { required: true, type: () => String, minLength: 8 }, confirmPassword: { required: true, type: () => String, minLength: 8 } } }], [import("./application/dtos/access/accessSendSendEmailForUpdatePassword.dto"), { "AccessSendEmailForUpdatePasswordDTO": { email: { required: true, type: () => String }, redirectUrl: { required: true, type: () => String } } }], [import("./application/dtos/register/registerSendEmailForRegistrationUser.dto"), { "RegisterSendEmailForRegistrationUserDTO": { email: { required: true, type: () => String }, redirectUrl: { required: true, type: () => String } } }], [import("./application/dtos/register/registerUser.dto"), { "RegisterUserDTO": { token: { required: true, type: () => String }, name: { required: true, type: () => String }, image: { required: false, type: () => String, nullable: true }, password: { required: true, type: () => String, minLength: 8 }, confirmPassword: { required: true, type: () => String, minLength: 8 } } }], [import("./application/dtos/board/board-response.dto"), { "BoardResponseDTO": { id: { required: true, type: () => String }, title: { required: true, type: () => String }, description: { required: false, type: () => String }, userId: { required: true, type: () => String }, dueDate: { required: true, type: () => Date }, studyTimeInMinutes: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./domain/board/board.entity"), { "BoardEntity": { id: { required: true, type: () => String }, title: { required: true, type: () => String }, description: { required: false, type: () => String }, userId: { required: true, type: () => String }, dueDate: { required: true, type: () => Date }, studyTimeInMinutes: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./domain/userPermission/user-permission.entity"), { "UserPermissionEntity": { id: { required: false, type: () => String }, permission: { required: true, type: () => Object }, userId: { required: true, type: () => String }, createdAt: { required: false, type: () => Date }, updatedAt: { required: false, type: () => Date } } }], [import("./application/dtos/user-permission/user-permission-create.dto"), { "UserPermissionCreateDTO": { permission: { required: true, type: () => Object }, userId: { required: true, type: () => String } } }], [import("./application/dtos/user-permission/user-permission-delete-by-id.dto"), { "UserPermissionDeleteByIdDTO": { id: { required: true, type: () => String } } }], [import("./application/dtos/user/userDeleteById.dto"), { "UserDeleteByIdDTO": { id: { required: true, type: () => String } } }], [import("./application/dtos/board-task/board-task.entity"), { "BoardTaskEntity": { id: { required: true, type: () => String }, boardId: { required: true, type: () => String }, title: { required: true, type: () => String }, description: { required: true, type: () => String }, averageStudyTimeInMinutes: { required: true, type: () => Number }, order: { required: true, type: () => Number }, priority: { required: true, type: () => Object }, status: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./application/dtos/board-task-subtask/board-task-subtask.entity"), { "BoardTaskSubtaskEntity": { id: { required: true, type: () => String }, boardTaskId: { required: true, type: () => String }, title: { required: true, type: () => String }, description: { required: true, type: () => String }, isCompleted: { required: true, type: () => Boolean }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./domain/board-task/board-task.entity"), { "BoardTaskEntity": { id: { required: true, type: () => String }, boardId: { required: true, type: () => String }, title: { required: true, type: () => String }, description: { required: true, type: () => String }, averageStudyTimeInMinutes: { required: true, type: () => Number }, order: { required: true, type: () => Number }, priority: { required: true, type: () => Object }, status: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./domain/board-task-subtask/board-task-subtask.entity"), { "BoardTaskSubtaskEntity": { id: { required: true, type: () => String }, boardTaskId: { required: true, type: () => String }, title: { required: true, type: () => String }, description: { required: true, type: () => String }, isCompleted: { required: true, type: () => Boolean }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./application/dtos/board/create-board.dto"), { "CreateBoardDTO": { title: { required: true, type: () => String }, description: { required: false, type: () => String, nullable: true }, userId: { required: true, type: () => String }, dueDate: { required: true, type: () => Date }, studyTimeInMinutes: { required: true, type: () => Number } } }]], "controllers": [[import("./presentation/controllers/user-permission/user-permission.controller"), { "UserPermissionController": { "Create": {}, "DeleteById": {} } }], [import("./presentation/controllers/board/board.controller"), { "BoardController": { "create": { type: t["./application/dtos/board/board-response.dto"].BoardResponseDTO } } }]] } };
};